#!/usr/bin/env node

const http = require('http')
const WebSocketServer = require('websocket')
  .server
const connect = require('connect')
const compression = require('compression')
const serveStatic = require('serve-static')
const morgan = require('morgan')

const SessionStore = require('../lib/server/session-store')
const journal = require('../lib/journal')
const panqServer = require('../lib/server/panq-server')
const onWebSocketRequest = require('../lib/server/on-web-socket-request')
const autoSearch = require('../lib/server/auto-search')
const logMemoryUsage = require('../lib/server/log-memory-usage')

const LOG_FORMAT = ":date[iso] :remote-addr :req[x-forwarded-for] ':method :url HTTP/:http-version' :status"
const PORT = process.env.PORT || 3000
const sessionStore = new SessionStore()
const app = connect()

app
  .use(morgan(LOG_FORMAT))
  .use(compression())
  .use('/', panqServer(sessionStore, journal))
  .use(serveStatic(`${__dirname}/../public`, {
    immutable: true,
    maxAge: '1h'
  }))
const httpServer = http.createServer(app)
const wsServer = new WebSocketServer({
  httpServer
})

wsServer.on('request', onWebSocketRequest(sessionStore, journal))
httpServer.listen(PORT, () => console.log(new Date(), `Server running at port:${PORT}`))

setTimeout(() => autoSearch(journal), 100)

// 定期的にメモリ使用量を吐き出す
setInterval(logMemoryUsage, 5 * 60 * 1000)
