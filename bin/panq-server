#!/usr/bin/env node

const http = require('http')
const parser = require('url')
const WebSocketServer = require('websocket')
  .server
const static = require('node-static')
const sendIndex = require('../lib/server/send-index')
const startSearh = require('../lib/server/start-search')
const journal = require('../lib/journal')

const PORT = process.env.PORT || 3000
const file = new static.Server(`${__dirname}/../public`, {
  cache: 3600
})
const httpServer = http.createServer((req, res) => {
  const url = parser.parse(req.url, true);
  if (url.pathname === '/') {
    sendIndex(req, res, journal.queryHistories)
  } else {
    req.addListener('end', () => file.serve(req, res))
      .resume()
  }
})
const wsServer = new WebSocketServer({
  httpServer
})

httpServer.listen(PORT, () => console.log(`Server running at port:${PORT}`))
wsServer.on('request', (request) => {
  const connection = request.accept(null, request.origin)
  connection.on('message', (message) => {
    if (message.type === 'utf8') {
      startSearh(message.utf8Data, connection, journal)
    }
  })
})
