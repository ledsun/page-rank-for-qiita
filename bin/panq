#!/usr/bin/env node

const PageStream = require('../lib/page-stream')
const FetchItemListStream = require('../lib/fetch-item-list-stream')
const FetchItemStream = require('../lib/fetch-item-stream')
const AnalyzeHtmlStream = require('../lib/analyze-html-stream')
const CalculatePageRankStream = require('../lib/calculate-page-rank-stream')
const HasPageRankStream = require('../lib/has-page-rank-stream')
const CacheHtmlStream = require('../lib/cache-html-stream')
const templateStream = require('../lib/cli/template-stream')
const LimitStream = require('../lib/limit-stream')
const journal = require('../lib/journal')
const JournalStream = require('../lib/journal-stream')

const TAG = process.argv[2] || ''
const pageStream = new PageStream(TAG)
const fetchItemListStream = new FetchItemListStream(pageStream, new Set())
const fetchItemStream = new FetchItemStream(journal.ignoreItems)
const limitStream = new LimitStream(fetchItemListStream, fetchItemStream, 30)

const pageRankStream = pageStream
  .pipe(fetchItemListStream)
  .pipe(fetchItemStream)
  .pipe(new AnalyzeHtmlStream(journal.itemMap))
  .pipe(new CalculatePageRankStream())

pageRankStream.pipe(new JournalStream(journal.write))

const foundItemSteram = pageRankStream
  .pipe(new HasPageRankStream())

foundItemSteram.pipe(limitStream)
foundItemSteram.pipe(new CacheHtmlStream())
foundItemSteram
  .pipe(templateStream)
  .pipe(process.stdout)
